/*
 This files has been auto generated by srcript.
 Don't edit this file.
*/

#include "imspinner.h"
#include "cimspinner.h"

/* C++ definition
   void Spinner::SpinnerRainbow(const char *label, float radius, float thickness, const ImColor &color, float speed, float ang_min = 0.f, float ang_max = PI_2, int arcs = 1, int mode = 0)
*/
void SpinnerRainbow(const char *label, float radius, float thickness, const ImColor color, float speed) {
  ImSpinner::SpinnerRainbow(label, radius, thickness, color, speed);
}
/* C++ definition
   void Spinner::SpinnerRainbowMix(const char *label, float radius, float thickness, const ImColor &color, float speed, float ang_min = 0.f, float ang_max = PI_2, int arcs = 1, int mode = 0)
*/
void SpinnerRainbowMix(const char *label, float radius, float thickness, const ImColor color, float speed) {
  ImSpinner::SpinnerRainbowMix(label, radius, thickness, color, speed);
}
/* C++ definition
   void Spinner::SpinnerRotatingHeart(const char *label, float radius, float thickness, const ImColor &color, float speed, float ang_min = 0.f)
*/
void SpinnerRotatingHeart(const char *label, float radius, float thickness, const ImColor color, float speed) {
  ImSpinner::SpinnerRotatingHeart(label, radius, thickness, color, speed);
}
/* C++ definition
   void Spinner::SpinnerAng(const char *label, float radius, float thickness, const ImColor &color = white, const ImColor &bg = white, float speed = 2.8f, float angle = IM_PI, int mode = 0)
*/
void SpinnerAng(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerAng(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerAng8(const char *label, float radius, float thickness, const ImColor &color = white, const ImColor &bg = white, float speed = 2.8f, float angle = IM_PI, int mode = 0, float rkoef = 0.5f)
*/
void SpinnerAng8(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerAng8(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerAngMix(const char *label, float radius, float thickness, const ImColor &color = white, float speed = 2.8f, float angle = IM_PI, int arcs = 4, int mode = 0)
*/
void SpinnerAngMix(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerAngMix(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerLoadingRing(const char *label, float radius, float thickness, const ImColor &color = white, const ImColor &bg = half_white, float speed = 2.8f, int segments = 5)
*/
void SpinnerLoadingRing(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerLoadingRing(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerClock(const char *label, float radius, float thickness, const ImColor &color = white, const ImColor &bg = half_white, float speed = 2.8f)
*/
void SpinnerClock(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerClock(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerPulsar(const char *label, float radius, float thickness, const ImColor &bg = half_white, float speed = 2.8f, bool sequence = true, float angle = 0.f, int mode = 0)
*/
void SpinnerPulsar(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerPulsar(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerTwinPulsar(const char *label, float radius, float thickness, const ImColor &color = white, float speed = 2.8f, int rings = 2, int mode = 0)
*/
void SpinnerTwinPulsar(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerTwinPulsar(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerFadePulsar(const char *label, float radius, const ImColor &color = white, float speed = 2.8f, int rings = 2, int mode = 0)
*/
void SpinnerFadePulsar(const char *label, float radius) {
  ImSpinner::SpinnerFadePulsar(label, radius);
}
/* C++ definition
   void Spinner::SpinnerFadePulsarSquare(const char *label, float radius, const ImColor &color = white, float speed = 2.8f, int rings = 2, int mode = 0)
*/
void SpinnerFadePulsarSquare(const char *label, float radius) {
  ImSpinner::SpinnerFadePulsarSquare(label, radius);
}
/* C++ definition
   void Spinner::SpinnerCircularLines(const char *label, float radius, const ImColor &color = white, float speed = 1.8f, int lines = 8, int mode = 0)
*/
void SpinnerCircularLines(const char *label, float radius) {
  ImSpinner::SpinnerCircularLines(label, radius);
}
/* C++ definition
   void Spinner::SpinnerDots(const char *label, float *nextdot, float radius, float thickness, const ImColor &color = white, float speed = 2.8f, size_t dots = 12, float minth = -1.f, int mode = 0)
*/
void SpinnerDots(const char *label, float *nextdot, float radius, float thickness) {
  ImSpinner::SpinnerDots(label, nextdot, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerVDots(const char *label, float radius, float thickness, const ImColor &color = white, const ImColor &bgcolor = white, float speed = 2.8f, size_t dots = 12, size_t mdots = 6, int mode = 0)
*/
void SpinnerVDots(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerVDots(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerBounceDots(const char *label, float radius, float thickness, const ImColor &color = white, float speed = 2.8f, size_t dots = 3, int mode = 0)
*/
void SpinnerBounceDots(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerBounceDots(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerZipDots(const char *label, float radius, float thickness, const ImColor &color = white, float speed = 2.8f, size_t dots = 5)
*/
void SpinnerZipDots(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerZipDots(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerDotsToPoints(const char *label, float radius, float thickness, float offset_k, const ImColor &color = white, float speed = 1.8f, size_t dots = 5)
*/
void SpinnerDotsToPoints(const char *label, float radius, float thickness, float offset_k) {
  ImSpinner::SpinnerDotsToPoints(label, radius, thickness, offset_k);
}
/* C++ definition
   void Spinner::SpinnerDotsToBar(const char *label, float radius, float thickness, float offset_k, const ImColor &color = white, float speed = 2.8f, size_t dots = 5)
*/
void SpinnerDotsToBar(const char *label, float radius, float thickness, float offset_k) {
  ImSpinner::SpinnerDotsToBar(label, radius, thickness, offset_k);
}
/* C++ definition
   void Spinner::SpinnerWaveDots(const char *label, float radius, float thickness, const ImColor &color = white, float speed = 2.8f, int lt = 8)
*/
void SpinnerWaveDots(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerWaveDots(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerFadeDots(const char *label, float radius, float thickness, const ImColor &color = white, float speed = 2.8f, int lt = 8, int mode = 0)
*/
void SpinnerFadeDots(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerFadeDots(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerThreeDots(const char *label, float radius, float thickness, const ImColor &color = white, float speed = 2.8f, int lt = 8)
*/
void SpinnerThreeDots(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerThreeDots(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerFiveDots(const char *label, float radius, float thickness, const ImColor &color = 0xffffffff, float speed = 2.8f, int lt = 8)
*/
void SpinnerFiveDots(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerFiveDots(label, radius, thickness);
}
/* C++ definition
   void Spinner::Spinner4Caleidospcope(const char *label, float radius, float thickness, const ImColor &color = 0xffffffff, float speed = 2.8f, int lt = 8)
*/
void Spinner4Caleidospcope(const char *label, float radius, float thickness) {
  ImSpinner::Spinner4Caleidospcope(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerMultiFadeDots(const char *label, float radius, float thickness, const ImColor &color = white, float speed = 2.8f, int lt = 8)
*/
void SpinnerMultiFadeDots(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerMultiFadeDots(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerThickToSin(const char *label, float radius, float thickness, const ImColor &color = white, float speed = 2.8f, int lt = 8, int mode = 0)
*/
void SpinnerThickToSin(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerThickToSin(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerScaleDots(const char *label, float radius, float thickness, const ImColor &color = white, float speed = 2.8f, int lt = 8)
*/
void SpinnerScaleDots(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerScaleDots(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerSquareSpins(const char *label, float radius, float thickness, const ImColor &color = white, float speed = 2.8f)
*/
void SpinnerSquareSpins(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerSquareSpins(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerMovingDots(const char *label, float radius, float thickness, const ImColor &color = white, float speed = 2.8f, size_t dots = 3)
*/
void SpinnerMovingDots(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerMovingDots(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerRotateDots(const char *label, float radius, float thickness, const ImColor &color = white, float speed = 2.8f, int dots = 2, int mode = 0)
*/
void SpinnerRotateDots(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerRotateDots(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerOrionDots(const char *label, float radius, float thickness, const ImColor &color = white, float speed = 2.8f, int arcs = 4)
*/
void SpinnerOrionDots(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerOrionDots(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerGalaxyDots(const char *label, float radius, float thickness, const ImColor &color = white, float speed = 2.8f, int arcs = 4)
*/
void SpinnerGalaxyDots(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerGalaxyDots(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerTwinAng(const char *label, float radius1, float radius2, float thickness, const ImColor &color1 = white, const ImColor &color2 = red, float speed = 2.8f, float angle = IM_PI, int mode = 0)
*/
void SpinnerTwinAng(const char *label, float radius1, float radius2, float thickness) {
  ImSpinner::SpinnerTwinAng(label, radius1, radius2, thickness);
}
/* C++ definition
   void Spinner::SpinnerFilling(const char *label, float radius, float thickness, const ImColor &color1 = white, const ImColor &color2 = red, float speed = 2.8f)
*/
void SpinnerFilling(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerFilling(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerFillingMem(const char *label, float radius, float thickness, const ImColor &color, ImColor &colorbg, float speed)
*/
void SpinnerFillingMem(const char *label, float radius, float thickness, const ImColor color, ImColor colorbg, float speed) {
  ImSpinner::SpinnerFillingMem(label, radius, thickness, color, colorbg, speed);
}
/* C++ definition
   void Spinner::SpinnerTopup(const char *label, float radius1, float radius2, const ImColor &color = red, const ImColor &fg = white, const ImColor &bg = white, float speed = 2.8f)
*/
void SpinnerTopup(const char *label, float radius1, float radius2) {
  ImSpinner::SpinnerTopup(label, radius1, radius2);
}
/* C++ definition
   void Spinner::SpinnerTwinAng180(const char *label, float radius1, float radius2, float thickness, const ImColor &color1 = white, const ImColor &color2 = red, float speed = 2.8f, float angle = PI_DIV_4, int mode = 0)
*/
void SpinnerTwinAng180(const char *label, float radius1, float radius2, float thickness) {
  ImSpinner::SpinnerTwinAng180(label, radius1, radius2, thickness);
}
/* C++ definition
   void Spinner::SpinnerTwinAng360(const char *label, float radius1, float radius2, float thickness, const ImColor &color1 = white, const ImColor &color2 = red, float speed1 = 2.8f, float speed2 = 2.5f, int mode = 0)
*/
void SpinnerTwinAng360(const char *label, float radius1, float radius2, float thickness) {
  ImSpinner::SpinnerTwinAng360(label, radius1, radius2, thickness);
}
/* C++ definition
   void Spinner::SpinnerIncDots(const char *label, float radius, float thickness, const ImColor &color = white, float speed = 2.8f, size_t dots = 6)
*/
void SpinnerIncDots(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerIncDots(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerIncFullDots(const char *label, float radius, float thickness, const ImColor &color = white, float speed = 2.8f, size_t dots = 4)
*/
void SpinnerIncFullDots(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerIncFullDots(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerFadeBars(const char *label, float w, const ImColor &color = white, float speed = 2.8f, size_t bars = 3, bool scale = false)
*/
void SpinnerFadeBars(const char *label, float w) {
  ImSpinner::SpinnerFadeBars(label, w);
}
/* C++ definition
   void Spinner::SpinnerFadeTris(const char *label, float radius, const ImColor &color = white, float speed = 2.8f, size_t dim = 2, bool scale = false, int mode = 0)
*/
void SpinnerFadeTris(const char *label, float radius) {
  ImSpinner::SpinnerFadeTris(label, radius);
}
/* C++ definition
   void Spinner::SpinnerBarsRotateFade(const char *label, float rmin, float rmax , float thickness, const ImColor &color = white, float speed = 2.8f, size_t bars = 6)
*/
void SpinnerBarsRotateFade(const char *label, float rmin, float rmax , float thickness) {
  ImSpinner::SpinnerBarsRotateFade(label, rmin, rmax, thickness);
}
/* C++ definition
   void Spinner::SpinnerBarsScaleMiddle(const char *label, float w, const ImColor &color = white, float speed = 2.8f, size_t bars = 3)
*/
void SpinnerBarsScaleMiddle(const char *label, float w) {
  ImSpinner::SpinnerBarsScaleMiddle(label, w);
}
/* C++ definition
   void Spinner::SpinnerAngTwin(const char *label, float radius1, float radius2, float thickness, const ImColor &color = white, const ImColor &bg = half_white, float speed = 2.8f, float angle = IM_PI, size_t arcs = 1, int mode = 0)
*/
void SpinnerAngTwin(const char *label, float radius1, float radius2, float thickness) {
  ImSpinner::SpinnerAngTwin(label, radius1, radius2, thickness);
}
/* C++ definition
   void Spinner::SpinnerArcRotation(const char *label, float radius, float thickness, const ImColor &color = white, float speed = 2.8f, size_t arcs = 4, int mode = 0)
*/
void SpinnerArcRotation(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerArcRotation(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerArcFade(const char *label, float radius, float thickness, const ImColor &color = white, float speed = 2.8f, size_t arcs = 4, int mode = 0)
*/
void SpinnerArcFade(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerArcFade(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerSimpleArcFade(const char *label, float radius, float thickness, const ImColor &color = white, float speed = 2.8f)
*/
void SpinnerSimpleArcFade(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerSimpleArcFade(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerSquareStrokeFade(const char *label, float radius, float thickness, const ImColor &color = white, float speed = 2.8f)
*/
void SpinnerSquareStrokeFade(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerSquareStrokeFade(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerAsciiSymbolPoints(const char *label, const char* text, float radius, float thickness, const ImColor &color = white, float speed = 2.8f)
*/
void SpinnerAsciiSymbolPoints(const char *label, const char* text, float radius, float thickness) {
  ImSpinner::SpinnerAsciiSymbolPoints(label, text, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerTextFading(const char *label, const char* text, float radius, float fsize, const ImColor &color = white, float speed = 2.8f)
*/
void SpinnerTextFading(const char *label, const char* text, float radius, float fsize) {
  ImSpinner::SpinnerTextFading(label, text, radius, fsize);
}
/* C++ definition
   void Spinner::SpinnerSevenSegments(const char *label, const char* text, float radius, float thickness, const ImColor &color = white, float speed = 2.8f)
*/
void SpinnerSevenSegments(const char *label, const char* text, float radius, float thickness) {
  ImSpinner::SpinnerSevenSegments(label, text, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerSquareStrokeFill(const char *label, float radius, float thickness, const ImColor &color = white, float speed = 2.8f)
*/
void SpinnerSquareStrokeFill(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerSquareStrokeFill(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerSquareStrokeLoading(const char *label, float radius, float thickness, const ImColor &color = white, float speed = 2.8f)
*/
void SpinnerSquareStrokeLoading(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerSquareStrokeLoading(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerSquareLoading(const char *label, float radius, float thickness, const ImColor &color = white, float speed = 2.8f)
*/
void SpinnerSquareLoading(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerSquareLoading(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerFilledArcFade(const char *label, float radius, const ImColor &color = white, float speed = 2.8f, size_t arcs = 4, int mode = 0)
*/
void SpinnerFilledArcFade(const char *label, float radius) {
  ImSpinner::SpinnerFilledArcFade(label, radius);
}
/* C++ definition
   void Spinner::SpinnerPointsRoller(const char *label, float radius, float thickness, const ImColor &color = white, float speed = 2.8f, size_t points = 8, int circles = 2, float rspeed = 1.f)
*/
void SpinnerPointsRoller(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerPointsRoller(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerPointsArcBounce(const char *label, float radius, float thickness, const ImColor &color = white, float speed = 2.8f, size_t points = 4, int circles = 2, float rspeed = 0.f)
*/
void SpinnerPointsArcBounce(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerPointsArcBounce(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerFilledArcColor(const char *label, float radius, const ImColor &color = red, const ImColor &bg = white, float speed = 2.8f, size_t arcs = 4)
*/
void SpinnerFilledArcColor(const char *label, float radius) {
  ImSpinner::SpinnerFilledArcColor(label, radius);
}
/* C++ definition
   void Spinner::SpinnerFilledArcRing(const char *label, float radius, float thickness, const ImColor &color = red, const ImColor &bg = white, float speed = 2.8f, size_t arcs = 4)
*/
void SpinnerFilledArcRing(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerFilledArcRing(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerArcWedges(const char *label, float radius, const ImColor &color = red, float speed = 2.8f, size_t arcs = 4, int mode = 0)
*/
void SpinnerArcWedges(const char *label, float radius) {
  ImSpinner::SpinnerArcWedges(label, radius);
}
/* C++ definition
   void Spinner::SpinnerTwinBall(const char *label, float radius1, float radius2, float thickness, float b_thickness, const ImColor &ball = white, const ImColor &bg = half_white, float speed = 2.8f, size_t balls = 2, int mode = 0)
*/
void SpinnerTwinBall(const char *label, float radius1, float radius2, float thickness, float b_thickness) {
  ImSpinner::SpinnerTwinBall(label, radius1, radius2, thickness, b_thickness);
}
/* C++ definition
   void Spinner::SpinnerSolarBalls(const char *label, float radius, float thickness, const ImColor &ball = white, const ImColor &bg = half_white, float speed = 2.8f, size_t balls = 4)
*/
void SpinnerSolarBalls(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerSolarBalls(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerSolarScaleBalls(const char *label, float radius, float thickness, const ImColor &ball = white, float speed = 2.8f, size_t balls = 4)
*/
void SpinnerSolarScaleBalls(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerSolarScaleBalls(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerSolarArcs(const char *label, float radius, float thickness, const ImColor &ball = white, const ImColor &bg = half_white, float speed = 2.8f, size_t balls = 4)
*/
void SpinnerSolarArcs(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerSolarArcs(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerMovingArcs(const char *label, float radius, float thickness, const ImColor &color = white, float speed = 2.8f, size_t arcs = 4)
*/
void SpinnerMovingArcs(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerMovingArcs(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerRainbowCircle(const char *label, float radius, float thickness, const ImColor &color = white, float speed = 2.8f, size_t arcs = 4, float mode = 1)
*/
void SpinnerRainbowCircle(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerRainbowCircle(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerBounceBall(const char *label, float radius, float thickness, const ImColor &color = white, float speed = 2.8f, int dots = 1, bool shadow = false)
*/
void SpinnerBounceBall(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerBounceBall(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerPulsarBall(const char *label, float radius, float thickness, const ImColor &color = white, float speed = 2.8f, bool shadow = false, int mode = 0)
*/
void SpinnerPulsarBall(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerPulsarBall(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerIncScaleDots(const char *label, float radius, float thickness, const ImColor &color = white, float speed = 2.8f, size_t dots = 6, float angle = 0.f, int mode = 0)
*/
void SpinnerIncScaleDots(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerIncScaleDots(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerSomeScaleDots(const char *label, float radius, float thickness, const ImColor &color = white, float speed = 2.8f, size_t dots = 6, int mode = 0)
*/
void SpinnerSomeScaleDots(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerSomeScaleDots(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerAngTriple(const char *label, float radius1, float radius2, float radius3, float thickness, const ImColor &c1 = white, const ImColor &c2 = half_white, const ImColor &c3 = white, float speed = 2.8f, float angle = IM_PI)
*/
void SpinnerAngTriple(const char *label, float radius1, float radius2, float radius3, float thickness) {
  ImSpinner::SpinnerAngTriple(label, radius1, radius2, radius3, thickness);
}
/* C++ definition
   void Spinner::SpinnerAngEclipse(const char *label, float radius, float thickness, const ImColor &color = white, float speed = 2.8f, float angle = IM_PI)
*/
void SpinnerAngEclipse(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerAngEclipse(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerIngYang(const char *label, float radius, float thickness, bool reverse, float yang_detlta_r, const ImColor &colorI = white, const ImColor &colorY = white, float speed = 2.8f, float angle = IM_PI * 0.7f, int mode = 0)
*/
void SpinnerIngYang(const char *label, float radius, float thickness, bool reverse, float yang_detlta_r) {
  ImSpinner::SpinnerIngYang(label, radius, thickness, reverse, yang_detlta_r);
}
/* C++ definition
   void Spinner::SpinnerGooeyBalls(const char *label, float radius, const ImColor &color, float speed, int mode = 0)
*/
void SpinnerGooeyBalls(const char *label, float radius, const ImColor color, float speed) {
  ImSpinner::SpinnerGooeyBalls(label, radius, color, speed);
}
/* C++ definition
   void Spinner::SpinnerDotsLoading(const char *label, float radius, float thickness, const ImColor &color, const ImColor &bg, float speed)
*/
void SpinnerDotsLoading(const char *label, float radius, float thickness, const ImColor color, const ImColor bg, float speed) {
  ImSpinner::SpinnerDotsLoading(label, radius, thickness, color, bg, speed);
}
/* C++ definition
   void Spinner::SpinnerRotateGooeyBalls(const char *label, float radius, float thickness, const ImColor &color, float speed, int balls, int mode = 0)
*/
void SpinnerRotateGooeyBalls(const char *label, float radius, float thickness, const ImColor color, float speed, int balls) {
  ImSpinner::SpinnerRotateGooeyBalls(label, radius, thickness, color, speed, balls);
}
/* C++ definition
   void Spinner::SpinnerHerbertBalls(const char *label, float radius, float thickness, const ImColor &color, float speed, int balls)
*/
void SpinnerHerbertBalls(const char *label, float radius, float thickness, const ImColor color, float speed, int balls) {
  ImSpinner::SpinnerHerbertBalls(label, radius, thickness, color, speed, balls);
}
/* C++ definition
   void Spinner::SpinnerHerbertBalls3D(const char *label, float radius, float thickness, const ImColor &color, float speed)
*/
void SpinnerHerbertBalls3D(const char *label, float radius, float thickness, const ImColor color, float speed) {
  ImSpinner::SpinnerHerbertBalls3D(label, radius, thickness, color, speed);
}
/* C++ definition
   void Spinner::SpinnerRotateTriangles(const char *label, float radius, float thickness, const ImColor &color, float speed, int tris, int mode = 0)
*/
void SpinnerRotateTriangles(const char *label, float radius, float thickness, const ImColor color, float speed, int tris) {
  ImSpinner::SpinnerRotateTriangles(label, radius, thickness, color, speed, tris);
}
/* C++ definition
   void Spinner::SpinnerRotateShapes(const char *label, float radius, float thickness, const ImColor &color, float speed, int shapes, int pnt)
*/
void SpinnerRotateShapes(const char *label, float radius, float thickness, const ImColor color, float speed, int shapes, int pnt) {
  ImSpinner::SpinnerRotateShapes(label, radius, thickness, color, speed, shapes, pnt);
}
/* C++ definition
   void Spinner::SpinnerSinSquares(const char *label, float radius, float thickness, const ImColor &color, float speed, int mode = 0)
*/
void SpinnerSinSquares(const char *label, float radius, float thickness, const ImColor color, float speed) {
  ImSpinner::SpinnerSinSquares(label, radius, thickness, color, speed);
}
/* C++ definition
   void Spinner::SpinnerMoonLine(const char *label, float radius, float thickness, const ImColor &color = white, const ImColor &bg = red, float speed = 2.8f, float angle = IM_PI)
*/
void SpinnerMoonLine(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerMoonLine(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerCircleDrop(const char *label, float radius, float thickness, float thickness_drop, const ImColor &color = white, const ImColor &bg = half_white, float speed = 2.8f, float angle = IM_PI)
*/
void SpinnerCircleDrop(const char *label, float radius, float thickness, float thickness_drop) {
  ImSpinner::SpinnerCircleDrop(label, radius, thickness, thickness_drop);
}
/* C++ definition
   void Spinner::SpinnerSurroundedIndicator(const char *label, float radius, float thickness, const ImColor &color = white, const ImColor &bg = half_white, float speed = 2.8f)
*/
void SpinnerSurroundedIndicator(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerSurroundedIndicator(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerWifiIndicator(const char *label, float radius, float thickness, const ImColor &color = red, const ImColor &bg = half_white, float speed = 2.8f, float cangle = 0.f, int dots = 3)
*/
void SpinnerWifiIndicator(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerWifiIndicator(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerTrianglesSelector(const char *label, float radius, float thickness, const ImColor &color = white, const ImColor &bg = half_white, float speed = 2.8f, size_t bars = 8)
*/
void SpinnerTrianglesSelector(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerTrianglesSelector(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerFlowingGradient(const char *label, float radius, float thickness, const ImColor &color = white, const ImColor &bg = red, float speed = 2.8f, float angle = IM_PI)
*/
void SpinnerFlowingGradient(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerFlowingGradient(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerRotateSegments(const char *label, float radius, float thickness, const ImColor &color = white, float speed = 2.8f, size_t arcs = 4, size_t layers = 1, int mode = 0)
*/
void SpinnerRotateSegments(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerRotateSegments(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerLemniscate(const char* label, float radius, float thickness, const ImColor& color = white, float speed = 2.8f, float angle = IM_PI / 2.0f)
*/
void SpinnerLemniscate(const char* label, float radius, float thickness) {
  ImSpinner::SpinnerLemniscate(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerRotateGear(const char *label, float radius, float thickness, const ImColor &color = white, float speed = 2.8f, size_t pins = 12)
*/
void SpinnerRotateGear(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerRotateGear(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerRotateWheel(const char *label, float radius, float thickness, const ImColor &bg_color = white, const ImColor &color = white, float speed = 2.8f, size_t pins = 12)
*/
void SpinnerRotateWheel(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerRotateWheel(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerAtom(const char *label, float radius, float thickness, const ImColor &color = white, float speed = 2.8f, int elipses = 3)
*/
void SpinnerAtom(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerAtom(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerPatternRings(const char *label, float radius, float thickness, const ImColor &color = white, float speed = 2.8f, int elipses = 3)
*/
void SpinnerPatternRings(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerPatternRings(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerPatternEclipse(const char *label, float radius, float thickness, const ImColor &color = white, float speed = 2.8f, int elipses = 3, float delta_a = 2.f, float delta_y = 0.f)
*/
void SpinnerPatternEclipse(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerPatternEclipse(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerPatternSphere(const char *label, float radius, float thickness, const ImColor &color = white, float speed = 2.8f, int elipses = 3)
*/
void SpinnerPatternSphere(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerPatternSphere(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerRingSynchronous(const char *label, float radius, float thickness, const ImColor &color = white, float speed = 2.8f, int elipses = 3)
*/
void SpinnerRingSynchronous(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerRingSynchronous(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerRingWatermarks(const char *label, float radius, float thickness, const ImColor &color = white, float speed = 2.8f, int elipses = 3)
*/
void SpinnerRingWatermarks(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerRingWatermarks(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerRotatedAtom(const char *label, float radius, float thickness, const ImColor &color = white, float speed = 2.8f, int elipses = 3, int mode = 0)
*/
void SpinnerRotatedAtom(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerRotatedAtom(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerRainbowBalls(const char *label, float radius, float thickness, const ImColor &color, float speed, int balls = 5, int mode = 0)
*/
void SpinnerRainbowBalls(const char *label, float radius, float thickness, const ImColor color, float speed) {
  ImSpinner::SpinnerRainbowBalls(label, radius, thickness, color, speed);
}
/* C++ definition
   void Spinner::SpinnerRainbowShot(const char *label, float radius, float thickness, const ImColor &color, float speed, int balls = 5)
*/
void SpinnerRainbowShot(const char *label, float radius, float thickness, const ImColor color, float speed) {
  ImSpinner::SpinnerRainbowShot(label, radius, thickness, color, speed);
}
/* C++ definition
   void Spinner::SpinnerSpiral(const char *label, float radius, float thickness, const ImColor &color = white, float speed = 2.8f, size_t arcs = 4)
*/
void SpinnerSpiral(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerSpiral(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerSpiralEye(const char *label, float radius, float thickness, const ImColor &color = white, float speed = 2.8f)
*/
void SpinnerSpiralEye(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerSpiralEye(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerBarChartSine(const char *label, float radius, float thickness, const ImColor &color, float speed, int bars = 5, int mode = 0)
*/
void SpinnerBarChartSine(const char *label, float radius, float thickness, const ImColor color, float speed) {
  ImSpinner::SpinnerBarChartSine(label, radius, thickness, color, speed);
}
/* C++ definition
   void Spinner::SpinnerBarChartAdvSine(const char *label, float radius, float thickness, const ImColor &color, float speed, int mode = 0)
*/
void SpinnerBarChartAdvSine(const char *label, float radius, float thickness, const ImColor color, float speed) {
  ImSpinner::SpinnerBarChartAdvSine(label, radius, thickness, color, speed);
}
/* C++ definition
   void Spinner::SpinnerBarChartAdvSineFade(const char *label, float radius, float thickness, const ImColor &color, float speed, int mode = 0)
*/
void SpinnerBarChartAdvSineFade(const char *label, float radius, float thickness, const ImColor color, float speed) {
  ImSpinner::SpinnerBarChartAdvSineFade(label, radius, thickness, color, speed);
}
/* C++ definition
   void Spinner::SpinnerBarChartRainbow(const char *label, float radius, float thickness, const ImColor &color, float speed, int bars = 5, int mode = 0)
*/
void SpinnerBarChartRainbow(const char *label, float radius, float thickness, const ImColor color, float speed) {
  ImSpinner::SpinnerBarChartRainbow(label, radius, thickness, color, speed);
}
/* C++ definition
   void Spinner::SpinnerBlocks(const char *label, float radius, float thickness, const ImColor &bg, const ImColor &color, float speed)
*/
void SpinnerBlocks(const char *label, float radius, float thickness, const ImColor bg, const ImColor color, float speed) {
  ImSpinner::SpinnerBlocks(label, radius, thickness, bg, color, speed);
}
/* C++ definition
   void Spinner::SpinnerTwinBlocks(const char *label, float radius, float thickness, const ImColor &bg, const ImColor &color, float speed)
*/
void SpinnerTwinBlocks(const char *label, float radius, float thickness, const ImColor bg, const ImColor color, float speed) {
  ImSpinner::SpinnerTwinBlocks(label, radius, thickness, bg, color, speed);
}
/* C++ definition
   void Spinner::SpinnerSquareRandomDots(const char *label, float radius, float thickness, const ImColor &bg, const ImColor &color, float speed)
*/
void SpinnerSquareRandomDots(const char *label, float radius, float thickness, const ImColor bg, const ImColor color, float speed) {
  ImSpinner::SpinnerSquareRandomDots(label, radius, thickness, bg, color, speed);
}
/* C++ definition
   void Spinner::SpinnerScaleBlocks(const char *label, float radius, float thickness, const ImColor &color, float speed, int mode = 0)
*/
void SpinnerScaleBlocks(const char *label, float radius, float thickness, const ImColor color, float speed) {
  ImSpinner::SpinnerScaleBlocks(label, radius, thickness, color, speed);
}
/* C++ definition
   void Spinner::SpinnerScaleSquares(const char *label, float radius, float thikness, const ImColor &color, float speed)
*/
void SpinnerScaleSquares(const char *label, float radius, float thikness, const ImColor color, float speed) {
  ImSpinner::SpinnerScaleSquares(label, radius, thikness, color, speed);
}
/* C++ definition
   void Spinner::SpinnerSquishSquare(const char *label, float radius, const ImColor &color, float speed)
*/
void SpinnerSquishSquare(const char *label, float radius, const ImColor color, float speed) {
  ImSpinner::SpinnerSquishSquare(label, radius, color, speed);
}
/* C++ definition
   void Spinner::SpinnerFluid(const char *label, float radius, const ImColor &color, float speed, int bars = 3)
*/
void SpinnerFluid(const char *label, float radius, const ImColor color, float speed) {
  ImSpinner::SpinnerFluid(label, radius, color, speed);
}
/* C++ definition
   void Spinner::SpinnerFluidPoints(const char *label, float radius, float thickness, const ImColor &color, float speed, size_t dots = 6, float delta = 0.35f)
*/
void SpinnerFluidPoints(const char *label, float radius, float thickness, const ImColor color, float speed) {
  ImSpinner::SpinnerFluidPoints(label, radius, thickness, color, speed);
}
/* C++ definition
   void Spinner::SpinnerArcPolarFade(const char *label, float radius, const ImColor &color = white, float speed = 2.8f, size_t arcs = 4, int mode = 0)
*/
void SpinnerArcPolarFade(const char *label, float radius) {
  ImSpinner::SpinnerArcPolarFade(label, radius);
}
/* C++ definition
   void Spinner::SpinnerArcPolarRadius(const char *label, float radius, const ImColor &color = white, float speed = 2.8f, size_t arcs = 4, int mode = 0)
*/
void SpinnerArcPolarRadius(const char *label, float radius) {
  ImSpinner::SpinnerArcPolarRadius(label, radius);
}
/* C++ definition
   void Spinner::SpinnerCaleidoscope(const char *label, float radius, float thickness, const ImColor &color = white, float speed = 2.8f, size_t arcs = 6, int mode = 0)
*/
void SpinnerCaleidoscope(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerCaleidoscope(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerHboDots(const char *label, float radius, float thickness, const ImColor &color = white, float minfade = 0.0f, float ryk = 0.f, float speed = 1.1f, size_t dots = 6, int mode = 0)
*/
void SpinnerHboDots(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerHboDots(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerMoonDots(const char *label, float radius, float thickness, const ImColor &first, const ImColor &second, float speed = 1.1f)
*/
void SpinnerMoonDots(const char *label, float radius, float thickness, const ImColor first, const ImColor second) {
  ImSpinner::SpinnerMoonDots(label, radius, thickness, first, second);
}
/* C++ definition
   void Spinner::SpinnerTwinHboDots(const char *label, float radius, float thickness, const ImColor &color = white, float minfade = 0.0f, float ryk = 0.f, float speed = 1.1f, size_t dots = 6, float delta = 0.f)
*/
void SpinnerTwinHboDots(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerTwinHboDots(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerThreeDotsStar(const char *label, float radius, float thickness, const ImColor &color = white, float minfade = 0.0f, float ryk = 0.f, float speed = 1.1f, float delta = 0.f)
*/
void SpinnerThreeDotsStar(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerThreeDotsStar(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerSineArcs(const char *label, float radius, float thickness, const ImColor &color = white, float speed = 2.8f)
*/
void SpinnerSineArcs(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerSineArcs(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerTrianglesShift(const char *label, float radius, float thickness, const ImColor &color = white, const ImColor &bg = half_white, float speed = 2.8f, size_t bars = 8)
*/
void SpinnerTrianglesShift(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerTrianglesShift(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerPointsShift(const char *label, float radius, float thickness, const ImColor &color = white, const ImColor &bg = half_white, float speed = 2.8f, size_t bars = 8)
*/
void SpinnerPointsShift(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerPointsShift(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerSwingDots(const char *label, float radius, float thickness, const ImColor &color = white, float speed = 2.8f)
*/
void SpinnerSwingDots(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerSwingDots(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerCircularPoints(const char *label, float radius, float thickness, const ImColor &color = white, float speed = 1.8f, int lines = 8)
*/
void SpinnerCircularPoints(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerCircularPoints(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerCurvedCircle(const char *label, float radius, float thickness, const ImColor &color = white, float speed = 2.8f, size_t circles = 1)
*/
void SpinnerCurvedCircle(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerCurvedCircle(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerModCircle(const char *label, float radius, float thickness, const ImColor &color = white, float ang_min = 1.f, float ang_max = 1.f, float speed = 2.8f)
*/
void SpinnerModCircle(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerModCircle(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerDnaDots(const char *label, float radius, float thickness, const ImColor &color = white, float speed = 2.8f, int lt = 8, float delta = 0.5f, bool mode = 0)
*/
void SpinnerDnaDots(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerDnaDots(label, radius, thickness);
}
/* C++ definition
   void Spinner::Spinner3SmuggleDots(const char *label, float radius, float thickness, const ImColor &color = white, float speed = 4.8f, int lt = 8, float delta = 0.5f, bool mode = 0)
*/
void Spinner3SmuggleDots(const char *label, float radius, float thickness) {
  ImSpinner::Spinner3SmuggleDots(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerRotateSegmentsPulsar(const char *label, float radius, float thickness, const ImColor &color = white, float speed = 2.8f, size_t arcs = 4, size_t layers = 1)
*/
void SpinnerRotateSegmentsPulsar(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerRotateSegmentsPulsar(label, radius, thickness);
}
/* C++ definition
   void Spinner::SpinnerSplineAng(const char *label, float radius, float thickness, const ImColor &color = white, const ImColor &bg = white, float speed = 2.8f, float angle = IM_PI, int mode = 0)
*/
void SpinnerSplineAng(const char *label, float radius, float thickness) {
  ImSpinner::SpinnerSplineAng(label, radius, thickness);
}
